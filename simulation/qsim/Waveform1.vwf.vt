// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "09/30/2024 01:24:13"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Proj
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Proj_vlg_vec_tst();
// constants                                           
// general purpose registers
reg Bateria;
reg Ligar;
reg Sensor_Direito;
reg Sensor_Esquerdo;
reg Sensor_Frontal;
reg Sensor_Trazeiro;
// wires                                               
wire A;
wire B;
wire C;
wire D;
wire Digito1;
wire E;
wire F;
wire G;
wire P;
wire RoboLigado;

// assign statements (if any)                          
Proj i1 (
// port map - connection between master ports and signals/registers   
	.A(A),
	.B(B),
	.Bateria(Bateria),
	.C(C),
	.D(D),
	.Digito1(Digito1),
	.E(E),
	.F(F),
	.G(G),
	.Ligar(Ligar),
	.P(P),
	.RoboLigado(RoboLigado),
	.Sensor_Direito(Sensor_Direito),
	.Sensor_Esquerdo(Sensor_Esquerdo),
	.Sensor_Frontal(Sensor_Frontal),
	.Sensor_Trazeiro(Sensor_Trazeiro)
);
initial 
begin 
#100000 $finish;
end 

// Ligar
initial
begin
	Ligar = 1'b1;
	Ligar = #90000 1'b0;
end 

// Bateria
initial
begin
	Bateria = 1'b0;
	Bateria = #70000 1'b1;
end 

// Sensor_Frontal
initial
begin
	Sensor_Frontal = 1'b1;
	Sensor_Frontal = #50000 1'b0;
	Sensor_Frontal = #20000 1'b1;
end 

// Sensor_Direito
initial
begin
	Sensor_Direito = 1'b1;
	Sensor_Direito = #10000 1'b0;
	Sensor_Direito = #20000 1'b1;
	Sensor_Direito = #10000 1'b0;
	Sensor_Direito = #10000 1'b1;
	Sensor_Direito = #20000 1'b0;
	Sensor_Direito = #10000 1'b1;
end 

// Sensor_Esquerdo
initial
begin
	Sensor_Esquerdo = 1'b1;
	Sensor_Esquerdo = #10000 1'b0;
	Sensor_Esquerdo = #30000 1'b1;
	Sensor_Esquerdo = #20000 1'b0;
	Sensor_Esquerdo = #20000 1'b1;
end 

// Sensor_Trazeiro
initial
begin
	Sensor_Trazeiro = 1'b1;
	Sensor_Trazeiro = #20000 1'b0;
	Sensor_Trazeiro = #60000 1'b1;
end 
endmodule

